{"version":3,"sources":["components/modals/TaskForm/helper/index.js","components/modals/TaskForm/index.js"],"names":["handleTasks","formData","edit","editData","setLoading","setShowModal","addToState","editTaskFromState","a","taskData","editATask","createATask","response","notifyUser","status","data","show","TaskForm","useForm","register","handleSubmit","errors","useState","loading","user","useContext","TasksContext","addNewTask","className","onSubmit","userId","FormGroup","description","htmlFor","message","ref","required","rows","name","defaultValue","Button","variant","block","size","type","disabled","Spinner","animation","role","aria-hidden"],"mappings":"uNAGaA,EAAW,uCAAG,WACzBC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAPyB,iBAAAC,EAAA,yDASzBJ,GAAW,GACLK,EAVmB,2BAWpBN,GACAF,IAEYC,EAdQ,gCAefQ,YAAUD,GAfK,2DAgBfE,YAAYF,GAhBG,gCAcnBG,EAdmB,OAkBbR,GAAW,GACvBQ,GAAYC,YAAWD,IAEnBA,IAAYA,EAASE,OArBA,wBAsBvBZ,EAAOK,EAAkBK,EAASG,MAAQT,EAAWM,EAASG,MAtBvC,kBAuBhBV,EAAa,CAClBW,MAAM,KAxBe,4CAAH,kE,QCsETC,UAnEE,SAAC,GAA4B,IAA1BZ,EAAyB,EAAzBA,aAAcU,EAAW,EAAXA,KAAW,EACAG,cAAnCC,EADmC,EACnCA,SAAUC,EADyB,EACzBA,aAAcC,EADW,EACXA,OADW,EAEbC,oBAAS,GAFI,mBAEpCC,EAFoC,KAE3BnB,EAF2B,OAGGW,EAAtCb,YAHmC,WAGGa,EAAxBZ,gBAHqB,MAGV,GAHU,EAGNqB,EAAST,EAATS,KAHM,EAKTC,qBAAWC,KAArCC,EALmC,EAKnCA,WAAYjB,EALuB,EAKvBA,UAcpB,OACE,oCACE,wBAAIkB,UAAU,oBAAd,IAAmC1B,EAAO,YAAc,aAExD,0BAAM2B,SAAUT,GAhBL,SAACnB,GACd,OAAOD,EAAY,2BACZC,GADW,IACD6B,OAAQN,IACvBtB,EACAC,EACAC,EACAC,EACAsB,EACAjB,OASE,kBAACqB,EAAA,EAAD,KACE,2BACEH,UAAWP,EAAOW,YAAc,cAAgB,QAChDC,QAAQ,eAEPZ,EAAOa,QAAP,0BAA6C,eAEhD,8BACEC,IAAKhB,EAAS,CAAEiB,UAAU,IAC1BC,KAAK,KACLT,UAAU,eACVU,KAAK,cACLC,aAAY,OAAEpC,QAAF,IAAEA,OAAF,EAAEA,EAAU6B,eAI5B,kBAACQ,EAAA,EAAD,CACEC,QAAQ,OACRC,OAAO,EACPC,KAAM,KACNC,KAAK,SACLC,SAAUtB,EACVK,UAAU,SAERL,GAAW,kCAAQrB,EAAO,YAAc,aAEzCqB,GACC,kBAACuB,EAAA,EAAD,CACEC,UAAU,SACVJ,KAAK,KACLK,KAAK,SACLC,eAAa,EACbrB,UAAU,kBAEV,0BAAMA,UAAU,WAAhB","file":"static/js/5.e9d79f5b.chunk.js","sourcesContent":["import { notifyUser } from \"../../../../util/helper-functions\";\nimport { createATask, editATask } from \"../../../../util/operations/tasks\";\n\nexport const handleTasks = async (\n  formData,\n  edit,\n  editData,\n  setLoading,\n  setShowModal,\n  addToState,\n  editTaskFromState\n) => {\n  setLoading(true);\n  const taskData = {\n    ...editData,\n    ...formData,\n  };\n  const response = edit\n    ? await editATask(taskData)\n    : await createATask(taskData);\n\n  response && setLoading(false);\n  response && notifyUser(response);\n\n  if (response && response.status) {\n    edit ? editTaskFromState(response.data) : addToState(response.data);\n    return setShowModal({\n      show: false,\n    });\n  }\n};\n","import React, { useContext, useState } from \"react\";\nimport { FormGroup, Button, Spinner } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { handleTasks } from \"./helper\";\nimport { Context as TasksContext } from \"../../../context/tasksContext\";\n\nconst TaskForm = ({ setShowModal, data }) => {\n  const { register, handleSubmit, errors } = useForm();\n  const [loading, setLoading] = useState(false);\n  const { edit = false, editData = {}, user } = data;\n\n  const { addNewTask, editATask } = useContext(TasksContext);\n\n  const submit = (formData) => {\n    return handleTasks(\n      { ...formData, userId: user },\n      edit,\n      editData,\n      setLoading,\n      setShowModal,\n      addNewTask,\n      editATask\n    );\n  };\n\n  return (\n    <>\n      <h5 className=\"text-center mb-3\"> {edit ? \"Edit Task\" : \"Add Task \"}</h5>\n\n      <form onSubmit={handleSubmit(submit)}>\n        <FormGroup>\n          <label\n            className={errors.description ? \"error-label\" : \"label\"}\n            htmlFor=\"Description\"\n          >\n            {errors.message ? `Description is required` : \"Description\"}\n          </label>\n          <textarea\n            ref={register({ required: true })}\n            rows=\"10\"\n            className=\"form-control\"\n            name=\"description\"\n            defaultValue={editData?.description}\n          />\n        </FormGroup>\n\n        <Button\n          variant=\"dark\"\n          block={true}\n          size={\"md\"}\n          type=\"submit\"\n          disabled={loading}\n          className=\"mt-4\"\n        >\n          {!loading && <span> {edit ? \"Edit Task\" : \"Add Task \"}</span>}\n\n          {loading && (\n            <Spinner\n              animation=\"border\"\n              size=\"sm\"\n              role=\"status\"\n              aria-hidden={true}\n              className=\"align-baseline\"\n            >\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n          )}\n        </Button>\n      </form>\n    </>\n  );\n};\n\nexport default TaskForm;\n"],"sourceRoot":""}